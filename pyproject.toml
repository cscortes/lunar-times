[project]
name = "moon-phases-calculator"
version = "1.4.0"
description = "A command-line Python application that calculates moonrise and moonset times for any given city and state"
authors = [
    {name = "Luis Cortes"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8,<3.9"
keywords = ["astronomy", "moon", "phases", "cli", "timezone"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Utilities",
]

dependencies = [
    "requests==2.32.4",
    "geopy==2.4.1", 
    "timezonefinder==6.5.4",
    "pytz==2024.2",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.5",
    "pytest-cov==4.0.0",
    "black==24.8.0",
    "flake8==5.0.4", 
    "mypy==1.14.1",
]

[project.urls]
Homepage = "https://github.com/your-username/moon-phases-calculator"
Repository = "https://github.com/your-username/moon-phases-calculator"
Documentation = "https://github.com/your-username/moon-phases-calculator/tree/main/docs"
Issues = "https://github.com/your-username/moon-phases-calculator/issues"

[project.scripts]
moon-phases = "moon_phases.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/moon_phases"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true 

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2
fail_under = 90

[tool.coverage.html]
directory = "htmlcov"